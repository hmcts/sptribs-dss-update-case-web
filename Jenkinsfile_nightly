#!groovy

properties([
  // H allow predefined but random minute see https://en.wikipedia.org/wiki/Cron#Non-standard_characters
  pipelineTriggers([cron('H 8 * * 1-5')]),
  parameters([
    string(name: 'FRONTEND_URL', defaultValue: 'https://sptribs-dss-update-case-web.aat.platform.hmcts.net/',
      description: 'The URL you want to run tests against'),
    string(name: 'FUNCTIONAL_TESTS_WORKERS',
      defaultValue: '2',
      description: 'Number of workers running functional tests'),
  ])
])

@Library("Infrastructure")
import uk.gov.hmcts.contino.AppPipelineConfig

def type = "nodejs"
def product = "sptribs"
def component = "dss-update-case-web"

static Map < String, Object > secret(String secretName, String envVariable) {
  [$class: 'AzureKeyVaultSecret',
   secretType: 'Secret',
   name: secretName,
   envVariable: envVariable
  ]
}

def secrets = [
  'sptribs-${env}': [
    secret('idam-dss-update-ui-secret', 'IDAM_SECRET'),
    secret('idam-systemupdate-username', 'CITIZEN_USERNAME'),
    secret('idam-systemupdate-password', 'CITIZEN_PASSWORD')
  ],
  's2s-${env}': [
    secret('microservicekey-sptribs-dss-update-case-web', 'SERVICE_AUTH_SECRET')
  ]
]

def pipelineConf = new AppPipelineConfig()
pipelineConf.vaultSecrets = secrets

withNightlyPipeline(type, product, component) {
  env.TEST_URL = "https://sptribs-dss-update-case-web.aat.platform.hmcts.net/"
  env.DS_UI_URL = params.FRONTEND_URL
  loadVaultSecrets(secrets)
  enableFortifyScan()

  afterAlways('fortify-scan') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/Fortify Scan/**/*'
  }
}
